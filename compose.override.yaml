services:
  proxy:
    ports:
      # HTTP
      - target: 80 # порт контейнера !порты прослушки должны быть одинаковыми
        published: 8080
        protocol: tcp
    environment:
      - PHP_PORT=80 # порты прослушки должны быть одинаковыми
      - PHP_FRONTEND_HOST=booking.yii
      - PHP_BACKEND_HOST=admin.booking.yii
    volumes:
      - ./:/app
    #volumes:
    #  - ./docker/proxy/nginx.dev.conf:/etc/nginx/conf.d/default.conf
  php:
    extra_hosts:
      # Ensure that host.docker.internal is correctly defined on Linux
      - host.docker.internal:host-gateway
    volumes:
      - ./docker/php/conf/php.dev.ini:/usr/local/etc/php/php.ini
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - XDEBUG_MODE=${XDEBUG_MODE:-debug}
      - XDEBUG_SESSION=PHPSTORM
      - DATABASE_URL=postgresql://admin:123456@db:5432/booking?serverVersion=17&charset=utf8
    tty: true
  db:
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:-db} # <-- important service name
      - POSTGRES_DB=${POSTGRES_DB:-booking}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123456}
      - POSTGRES_USER=${POSTGRES_USER:-admin}
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pg_isready", "-p", "5432", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
    ports:
      - target: 5432
        published: 6432
        protocol: tcp
  rabbitmq:
    #hostname: ${RABBITMQ_HOST:-rabbitmq}
    ports:
      - target: ${RABBITMQ_PORT:-5672}  # AMQP protocol port
        published: 5672
        protocol: tcp
      - target: ${RABBITMQ_ADMIN_PORT:-15672} # RabbitMQ Management UI port
        published: 15672
        protocol: tcp
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-123456}
    #  - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648